{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","e","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","console","log","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYears","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","validate","trim","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpense","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b0bd769.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import './ExpensesFilter.css';\r\n\r\nexport default function ExpensesFilter(props) {\r\n\r\n    function dropDownChangeHandler(e){\r\n        props.onChangeFilter(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"expenses-filter\">\r\n            <div className=\"expenses-filter__control\">\r\n                <label>Filter by Year</label>\r\n                <select value={props.selected} onChange={dropDownChangeHandler}>\r\n                    <option value=\"2022\">2022</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React, {useState} from 'react';\n\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n\n    return (\n        <li>\n            <Card className='expense-item'>\n                <ExpenseDate date={props.date}/>\n                <div className='expense-item__description'>\n                    <h2>{props.title}</h2>\n                    <div className='expense-item__price'>${props.amount}</div>\n                </div>\n            </Card>\n        </li>\n    );\n}\n\nexport default ExpenseItem;\n","import './ExpensesList.css';\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nexport default function ExpensesList(props) {\r\n\r\n    if (props.items.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>\r\n    }\r\n\r\n    return <ul className=\"expenses-list\">\r\n        {props.items.map((expense) => {\r\n                return <ExpenseItem\r\n                    key={expense.id}\r\n                    title={expense.title}\r\n                    amount={expense.amount}\r\n                    date={expense.date}\r\n                />\r\n            })}\r\n    </ul>\r\n}","import './ChartBar.css';\r\n\r\nexport default function ChartBar(props) {\r\n    let barFillHeight = '0%';\r\n    console.log(props.maxValue);\r\n    if(props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    )\r\n}","import './Chart.css';\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nexport default function Chart(props) {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map(dataPoint => (\r\n                    <ChartBar\r\n                        key={dataPoint.label}\r\n                        value={dataPoint.value}\r\n                        maxValue={totalMaximum}\r\n                        label={dataPoint.label}/>\r\n                )\r\n            )}\r\n        </div>\r\n    )\r\n}","import Chart from \"../Chart/Chart\";\r\n\r\nexport default function ExpensesChart(props){\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0,},\r\n        {label: 'Feb', value: 0,},\r\n        {label: 'Mar', value: 0,},\r\n        {label: 'Apr', value: 0,},\r\n        {label: 'May', value: 0,},\r\n        {label: 'Jun', value: 0,},\r\n        {label: 'Jul', value: 0,},\r\n        {label: 'Aug', value: 0,},\r\n        {label: 'Sep', value: 0,},\r\n        {label: 'Oct', value: 0,},\r\n        {label: 'Nov', value: 0,},\r\n        {label: 'Dec', value: 0,},\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth(); //starting at 0 => Jan => 0\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n    return <Chart dataPoints={chartDataPoints} />\r\n}","import React, {useState} from 'react';\n\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = (props) => {\n    const [filteredYears, setFilteredYear] = useState('2021');\n\n    function filterChangeHandler(selectedYear) {\n        setFilteredYear(selectedYear);\n    }\n\n    const filteredExpenses = props.items.filter(expense => {\n        return expense.date.getFullYear().toString() === filteredYears;\n    });\n\n\n\n    return (\n        <Card className=\"expenses\">\n            <ExpensesFilter selected={filteredYears} onChangeFilter={filterChangeHandler}/>\n            <ExpensesChart expenses={filteredExpenses} />\n            <ExpensesList items={filteredExpenses} />\n            {/*{*/}\n            {/*    props.items.map((expense) => {*/}\n            {/*            return <ExpenseItem key={expense.id}*/}\n            {/*                         title={expense.title}*/}\n            {/*                         amount={expense.amount}*/}\n            {/*                         date={expense.date}*/}\n            {/*            />*/}\n            {/*        }*/}\n            {/*    )*/}\n            {/*}*/}\n\n        </Card>\n    );\n}\n\nexport default Expenses;\n","import './ExpenseForm.css';\r\nimport {useState} from \"react\";\r\n\r\nfunction ExpenseForm(props) {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n    // const [userInput, setUserInput] = useState({\r\n    //     enteredTitle: '',\r\n    //     enteredAmount: '',\r\n    //     enteredDate: '',\r\n    // });\r\n\r\n    const titleChangeHandler = function (e) {\r\n        setEnteredTitle(e.target.value);\r\n        //     setUserInput({\r\n        //         ...userInput,\r\n        //         enteredTitle: e.target.value,\r\n        //     })\r\n    }\r\n    const amountChangeHandler = function (e) {\r\n        setEnteredAmount(e.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredAmount: e.target.value,\r\n        // })\r\n    }\r\n    const dateChangeHandler = function (e) {\r\n        setEnteredDate(e.target.value);\r\n        //  setUserInput({\r\n        //     ...userInput,\r\n        //      enteredDate: e.target.value,\r\n        // })\r\n        // setUserInput((prevState) => {\r\n        //     return {\r\n        //         ...prevState,\r\n        //         enteredDate: e.target.value,\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    function validate(){\r\n      if((enteredTitle.trim() != '') && enteredAmount.trim() != '' && enteredDate) return true;\r\n      return false;\r\n    }\r\n\r\n    function submitHandler(e) {\r\n        e.preventDefault();\r\n        console.log(validate())\r\n        if (!validate()) return;\r\n        if(!enteredTitle.trim() && (!enteredAmount.trim() || enteredAmount == 0) && !enteredDate) return;\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate),\r\n        }\r\n\r\n        // console.log(expenseData);\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    }\r\n\r\n    return <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label>Title</label>\r\n                <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}/>\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input type=\"number\" value={enteredAmount} min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler}/>\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Date</label>\r\n                <input type=\"date\" value={enteredDate} min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler}/>\r\n            </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n            <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n            <button type=\"submit\">Add submit</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport default ExpenseForm;","import ExpenseForm from \"./ExpenseForm\";\r\nimport './NewExpense.css';\r\nimport {useState} from \"react\";\r\n\r\n\r\nfunction NewExpense(props) {\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    function saveExpenseDataHandler(enteredExpenseData) {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random() + '',\r\n        }\r\n        props.onAddExpense(expenseData);\r\n        // console.log(expenseData);\r\n    }\r\n\r\n    function startEditingHandler() {\r\n        setIsEditing(true);\r\n    }\r\n\r\n    function stopEditingHandler() {\r\n        setIsEditing(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            {!isEditing &&\r\n            <button onClick={startEditingHandler}>Add new Expense</button>\r\n            }\r\n            {isEditing &&\r\n            <ExpenseForm\r\n                onSaveExpenseData={saveExpenseDataHandler}\r\n                onCancel={stopEditingHandler}\r\n            />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewExpense;","import React, {useState} from 'react';\n\nimport Expenses from './components/Expenses/Expenses';\nimport ExpenseForm from \"./components/NewExpense/ExpenseForm\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n    {\n        id: 'e1',\n        title: 'Toilet Paper',\n        amount: 94.12,\n        date: new Date(2020, 7, 14),\n    },\n    {id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12)},\n    {\n        id: 'e3',\n        title: 'Car Insurance',\n        amount: 294.67,\n        date: new Date(2021, 2, 28),\n    },\n    {\n        id: 'e4',\n        title: 'New Desk (Wooden)',\n        amount: 450,\n        date: new Date(2021, 5, 12),\n    },\n];\n\nconst App = () => {\n\n\n    const [expense, setExpense] = useState(DUMMY_EXPENSES);\n\n    function addExpenseHandler(expense) {\n        setExpense(prev => {\n            return [\n                expense,\n                ...prev,\n            ];\n        });\n    }\n\n    // return React.createElement(\n    //   'div',\n    //   {},\n    //   React.createElement('h2', {}, \"Let's get started!\"),\n    //   React.createElement(Expenses, { items: expenses })\n    // );\n\n    return (\n        <div>\n            <NewExpense onAddExpense={addExpenseHandler}/>\n            <Expenses items={expense}/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}